[mysqld]
#全局，非动态；
#MySQL安装目录的路径，所有的路径通常都是相对于此路径进行解析。
basedir=${Linux格式MySQL安装根路径}
#全局，非动态；
#数据目录的路径。
datadir=${Linux格式MySQL启动配置路径}/slave/mysqld_data
#全局，非动态；
#默认3306，最小0，最大65535
#监听TCP/IP连接时使用的端口号。
#必须>=1024，除非server是通过root系统用户启动的。
port=3313
#运行mysqld server的操作系统账户名，而非MySQL用户名。
#如果指定多个，只有第一个生效，并且mysqld会产生warning
#/etc/my.cnf和$MYSQL_HOME/my.cnf在命令行选项之前被处理，需要注意。
user=xsj3811
#全局，会话，动态
#为表设置默认的存储引擎（表类型）。如果在server启动时禁用了默认存储引擎，那么必须设置默认存储引擎为其他值，否则server不能启动。
default-storage-engine=InnoDB
#全局，动态
#默认OFF
#刷新同步所有变更到磁盘在每一条SQL语句之后。通常MySqld只会在每条SQL语句之后将变更写入磁盘，然后让操作系统来处理同步到磁盘的事情。
flush=ON
#全局，非动态
#在启动时从此文件中读取SQL语句。
#没条语句必须单独一行，且不能有注释。
init-file=${Linux格式MySQL启动配置路径}/slave/mysqld_init_file/init.sql
#全局，会话，动态
#给定了这个选项，server不会对ALTER TABLE操作的处理使用优化的方法。
#默认OFF
#会恢复使用一个临时表、拷贝数据、重命名临时表到原始表操作，就如同MySQL5.0或更早时的做法。
old-alter-table=OFF
#全局，非动态
#默认0，最小0，最大值依赖于系统
#改变可用于mysqld的文件描述符的个数。如果mysqld报错：Too many open files，那么应该提高此值。
#如果请求的文件描述符个数不能成功分配，那么mysqld在error日志中写一条warning日志。
open-files-limit=0
#MySQL server允许的最大限制同时客户端连接的数目，默认值151
#提高此值会提高msyqld所需的文件描述符数目
#这些连接中的一个被保留给一个拥有SUPER权限的用户，以便允许即使在连接上限达到时也能连接登陆
max_connections=100
#默认ON
#开启或者禁用用户自定义的MySQL server分区。
partition=ON
#默认0
#一些系统上server停止后，TCP/IP端口不能立即可用，如果此时快速对server进行重启，会在尝试打开端口时失败。
#这个选项设置server在TCP/IP端口无法打开时等待若干秒。默认不等待。
port-open-timeout=5
#启用此选项，用户不能通过GRANT语句创建新的MySQL用户，除非用户对mysql.user拥有INSERT权限。
#默认FALSE
#如果你想一个拥有GRANT权限的用户拥有创建新用户的能力，必须授予这个用户以下权限：
#GRANT INSERT(user) ON mysql.user TO ' user_name'@' host_name';
#这个选项确保了用户不能直接修改权限列，必须使用GRANT语句来给其他用户权限。
safe-user-create=TRUE
#全局，会话，动态
#默认''
#可以多个值，逗号分隔。
sql-mode=''
#默认FALSE
#SYSDATE()默认返回它执行的时间，而不是它所在的语句开始执行的时间。
#这与NOW()的行为不同。这个选项导致SYSDATE()成为NOW()的一个别名（如果设置为TRUE的话）。
sysdate-is-now=FALSE
#设置默认的事务隔离级别。
#可选值：READ-UNCOMMITTED、READ-COMMITTED、REPEATABLE-READ（默认值）、SERIALIZABLE
transaction-isolation=REPEATABLE-READ
###################################################################################
#不要忽略client发送来的字符集信息。要想忽略client的信息，而采用默认的server字符集，那么使用--skip-character-set-client-handshake
#因此建议设置为TRUE
character-set-client-handshake=TRUE
#全局，会话，动态
#文件系统字符集。用来解析文件名的字符串字面量，比如在LOAD DATA INFILE或者SELECT ... INTO OUTFILE语句和LOAD_FILE()函数。
#上述语句场景下的文件名在文件打开发生前从character_set_client转换为character_set_filesystem。
#默认binary，意味着不发生转换，对于多字节文件名系统，比如一些系统使用UTF-8来展示文件名，那么应该设置为utf8
character-set-filesystem=utf8
#全局，会话，动态
#默认latin1
#设置默认的server字符集。应该同时使用--collation-server设置校对方式。
character-set-server=utf8
#全局，会话，动态
#默认latin1_swedish_ci
#设置默认的server校对方式
collation-server=utf8_general_ci
###################################################################################
#设置默认的server时区。设置全局的time_zone系统变量。如果没有指定，那么默认的时区与系统时区一致（system_time_zone系统变量）。
default-time-zone=SYSTEM
###################################################################################
#如果mysqld挂了，写一个core文件。文件的名字和位置取决于操作系统。在Linux上文件名为core.pid，写在当前的进程工作目录，对于mysqld来说是数据路径下。
#不能带参数
core-file
###################################################################################
#全局，非动态
#指定用于创建临时文件的路径。默认/tmp目录，可以指定多个值循环使用，Unix分隔符:Windows分隔符;
#赋值slave需要临时文件保持存活当机器重启时，以便能够复制临时表或者执行LOAD DATA INFILE操作。如果临时文件目录丢失了，那么当server重启时，复制会失败。
tmpdir=${Linux格式MySQL启动配置路径}/slave/mysqld_tmp_dir
###################################################################################
#全局，非动态；
#进程ID文件路径名。server在数据路径下创建此文件，除非指定此选项其他路径地址。
#此文件被其他程序所使用，来判断server的进程ID。
pid-file=${Linux格式MySQL启动配置路径}/slave/mysqld_server_pid/template-slave.pid
#指定单个InnoDB数据文件和大小。每个数据文件的全路径由innodb_data_home_dir和这里指定的每一个路径拼接而成。
#文件大小值可以指定后缀K、M、G，必须至少大于10M
#如果没指定此选项，默认为单个，自动扩展，大于10M，命名为ibdata1
#单个文件大小上限由操作系统决定。
innodb_data_file_path=ibdata1:10M:autoextend
#全局，非动态；
#所有system表空间下的InnoDB数据文件的公共前缀路径。
#此选项将会失效，如果innodb_file_per_table启用的时候。
#默认值为MySQL的数据路径。如果指定值为空串，那么可以在innodb_data_file_path上指定绝对路径。
innodb_data_home_dir=${Linux格式MySQL启动配置路径}/slave/mysqld_innodb_data
#全局，非动态；
#一个日志组中每个日志文件的大小字节数。总大小不能超过最大值，要略低于4GB。
#默认5M，最小1M，最大4G
#大小范围从1M~buffer pool的1/N，N是组中日志文件数目；
#这个值越大，需要的checkpoint刷新操作越少，降低磁盘I/O；
#日志文件太大，会导致crash恢复变慢。
innodb_log_file_size=5M
#全局，非动态；
#默认2，最小值2，最大值100
#日志组中日志文件数目，InnoDB以轮转的方式写入。
#默认推荐值为2。位置由innodb_log_group_home_dir指定。
innodb_log_files_in_group=2
#全局，非动态；
#InnoDB的redo日志文件路径。数目由innodb_log_files_in_group指定。
#默认在MySQL数据路径下创建2个文件，命名为：ib_logfile0和ib_logfile1，大小取决于innodb_log_file_size系统变量。
innodb_log_group_home_dir=${Linux格式MySQL启动配置路径}/slave/mysqld_innodb_log
###################################################################################
#全局，动态；
#可以指定一个或多个逗号分隔的值，log-output=value,...
#决定了通用查询日志和慢查询日志输出的目的地。
#可选值TABLE、FILE、NONE；
#默认值FILE；
#FILE选择日志文件作为目的地；
#NONE禁用日志，如果出现NONE，他会优先于其他值生效。
#可以同时选择TABLE和FILE；
#此选项不能用于开启日志输出，使用 --general_log和--slow_query_log选项来开启。
#对于FILE，--general_log_file和-slow_query_log_file选项决定了日志文件位置。
log-output=FILE
#全局，动态；
#默认值OFF；
#是否开启通用查询日志。值可以为0或OFF禁用，或者1或ON开启。
#指定通用查询日志的初始状态。
#不指定值等同于指定为1，表示开启。
#忽略此选项等同于指定为0，表示禁用。
general-log=ON
#全局，动态；
#通用查询日志的文件名。
#默认值为host_name.log，初始值可以用--general_log_file选项来修改。
general_log_file=${Linux格式MySQL启动配置路径}/slave/mysqld_general_log/template-general.log
#全局，动态；
#指定初始的慢查询日志状态。
#没有参数或者参数值为1，表示启用日志。
#忽略此参数或者参数值为0，表示禁用日志。
slow-query-log=ON
#全局、会话，动态；
#默认10，最小0
#如果一个查询的耗时超过此值秒数，server递增Slow_queries状态变量。
#如果启用了慢查询日志，此查询被记录到慢查询日志文件中。
#这个值计算的是实际计算，不是CPU时间。
#对于写入日志文件，那么时间能精确到微妙部分，对于写入日志表，只记录到整数部分，微妙部分被省略。
long_query_time=1
#全局，动态；
#默认OFF；
#如果使用此选项，且慢查询开启了，将要获取所有行的查询被记录下来。
#这个选项不是一定意味着没有使用索引，比如使用全索引检索的查询使用了索引，但是仍然会被记录到日志中，因为此索引没能限制行数。
log-queries-not-using-indexes=ON
#包含慢的管理语句在慢查询日志中。
#默认OFF，不能带参数
#管理语句包括：ALTER TBLE、ANALYZE TABLE、CHECK TABLE、CREATE INDEX、DROP INDEX、OPTIMIZE TABLE、REPAIR TABLE
log-slow-admin-statements
#全局，会话，动态
#默认0，最小0，最大bigint最大值
#如果设置了这个选项，那么检索少于此值行数的查询不会被写入满查询日志。
min-examined-row-limit=10
#全局，动态；
#慢查询日志文件名。
#默认：host_name-slow.log
slow_query_log_file=${Linux格式MySQL启动配置路径}/slave/mysqld_slow_log/template-slow.log
#全局、会话，动态；
#默认1，最小0，最大18446744073709547520
#打印warnings到error日志中，比如：Aborted connection...
#默认开启的。要禁用，置0。
#仅仅指定此变量，但是缺省值，则当前值递增1.
#建议启用此选项，并设置值大于0，能获得更多信息。如果值>1，那么被抛弃的连接会被写入error日志，新连接的访问拒绝错误也会被写入。
#如果一个slave server启动时开启了log-warnings，slave会打印消息到error日志中，以提供关于它的状态的信息，比如启动工作位置的binary日志和relay日志，当切换到另一个另一个relay日志，或者当断开连接后的重连时。
#server记录关于不安全语句的消息，对于急于语句的日志，如果log-warnings>0
log-warnings=2
#全局，非动态；
#记录错误、启动消息到此文件中。
#忽略文件名值，则MySQL使用host_name.err
#如果文件名没有扩展名，server会添加一个扩展名.err
log-error=${Linux格式MySQL启动配置路径}/slave/mysqld_error_log/template-error.err
###################################################################################
#全局，动态；
#默认0，最小0，最大4294967295
#对于master和slave复制server都通用，用于复制中master和slave server来唯一地标识自己。
#在master和每一个slave，必须使用此选项来建立一个唯一的复制ID。
#如果忽略此选项，默认的ID是0，这时master会拒绝所有slave的连接，slave会拒绝连接到master。
#无论server ID显式设置为0，或者是使用默认值，server都会设置server_id系统变量为1。
server-id=2
#必须提供文件名值。
#默认master.info，位于数据路径下。
#用于slave记录关于master信息的文件的名字。
master-info-file=${Linux格式MySQL启动配置路径}/slave/mysqld_master_info/template-master.info
#全局，非动态；
#用于slave记录relay日志的相关信息的文件的名字。默认relay-log.info，位于数据路径下。
relay_log_info_file=${Linux格式MySQL启动配置路径}/slave/mysqld_relay_info/template-relay-log.info
#全局，非动态；
#relay日志文件的基本名。默认host_name-relay-bin，在数据路径下，除非指定一个绝对路径指向不同路径。
#server会按序在基本名后添加数字后缀来创建文件。
#指定了此选项，必须给定值，只有不给定此选项时才会使用默认基本名。仅仅指定选项，不给定值，导致未定义行为。
#此选项指定的值也会被用于relay日志的index文件基本名，可以通过指定--relay-log-index选项来指定一个不同的relay日志index文件基本名。
relay-log=${Linux格式MySQL启动配置路径}/slave/mysqld_relay_log/template-relay-bin
#全局，非动态；
#必须指定文件名值。
#relay日志的index文件的名字。默认是数据路径下的host_name-relay-bin.index，host_name是slave server的名字。
#如果指定了这个选项，必须指定一个值，默认的基本名只有在没有指定此选项时才会被使用。
#如果仅仅指定这个选项，没有给定值，那么行为未定义。
#指定了此选项的值，也会被用作relay日志的基本名。可以通过指定--relay-log选项来覆盖这一行为来指定不同的relay日志文件基本名。
relay-log-index=${Linux格式MySQL启动配置路径}/slave/mysqld_relay_index/template-relay-bin
#告知slave从机的SQL线程不要复制任何更新指定表的语句，即使任何其他表可能被同一个语句更新。
#要指定多于1个忽略的表，多次使用这个选项，每个针对一个表。
#这个选项支持跨数据库更新，与--replicate-ignore-db不同。
#这个选项仅仅影响应用到表的语句。不影响应用到数据库对象的语句，比如存储例程。
replicate-ignore-table=test.server_startup
#全局，动态；
#默认0，最小0，最大99
#binary日志被自动删除的天数。默认是0表示不自动删除。
#可能的删除操作发生在启动和binary日志被刷新时。
expire_logs_days=0
#全局，会话，动态
#默认STATEMENT，可选ROW、STATEMENT、MIXED
#指定使用基于行、语句、混合的复制。在一些条件下，运行时切换这个变量不可能，或者导致复制失败。
#在MySQL5.5之前，设置binary日志格式但是没有启用binary日志会导致MySQL server无法启动。在MySQL5.5，server能够启动，并记录warning日志而不是报错。
binlog-format=STATEMENT
#全局，动态；
#默认0，最小0，最大18446744073709547520
#如果此值大于0，那么MySQL server每sync_binlog个写操作之后都会同步binary日志到磁盘（fdatasync()）。如果开启了autocommit，那么每条语句都有1个对binary日志的写操作，否则每个事务1个写操作。默认值0表示不与磁盘进行同步操作，这样一来，server会依赖操作系统刷新binary日志内容就如同其他操作系统文件一样。
#如果设置为1，这会是最安全的选择，因为发生crash时，你的binary日志最多丢失一个语句或者一个事务。然而，这也是最慢的选择。
sync_binlog=1
#全局，非动态；
#启用binary日志。server记录所有对数据的变更的语句到binary日志，用于备份和复制。
#如果设置了选项值，那么可以是日志序列的基本名。server创建binary日志时，按序在基本名后面加数字后缀。否则MySQL使用host_name-bin的格式作为基本名。
#当server从index文件中读取一个实体时，会检查是否包含一个相对路径，如果包含，路径的相对部分会使用--log-bin选项替换为绝对路径。但是绝对路径保持不变，index文件必须经过手动编辑来启用新的路径。手动介入需要在重新定位binary日志或者重放日志文件时。
#设置这个选项值会导致log_bin系统变量被设置为ON，而不是基本名。
log-bin=${Linux格式MySQL启动配置路径}/slave/mysqld_bin_log/template-bin
#可以不指定文件名值。
#binary日志文件的index文件的名字。
#如果你忽略文件名值，且没有指定--log-bin，那么MySQL使用host_name-bin.index作为文件名。
log-bin-index=${Linux格式MySQL启动配置路径}/slave/mysqld_bin_index/template-bin
###################################################################################
#全局，会话，动态
#默认OFF
#启用针对大结果集保存临时文件到文件中。此选项防止了大多数“table full”错误，但是同时也使得那些内存表能满足的查询也慢下来了。
#从MySQL 3.23.2开始，server能够自动处理大结果集，通过针对小临时表使用内存并在必要时切换到磁盘。
#因此可以将其设置为OFF
big-tables=OFF
#全局，非动态
#默认0.0.0.0
#MySQL server在一个单独的网络socket上监听TCP/IP连接。这个socket绑定到一个单独的地址上，但是一个地址可能映射到多个网络接口。
#默认地址是0.0.0.0，可以在server启动时设置为IPv4或IPv6地址或主机名。
#0.0.0.0表示server接受server主机上的所有IPv4接口的TCP/IP连接。
bind-address=0.0.0.0




